package route

import (
	"context"
	"errors"
	"github.com/gin-contrib/graceful"
	_ "github.com/leslieleung/communicator/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/leslieleung/communicator/internal/controller"
	"github.com/leslieleung/communicator/pkg/config"
	"github.com/leslieleung/communicator/pkg/middleware"
	swaggerfiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
	"os/signal"
	"strconv"
	"syscall"
)

func StartRouter() {
	ctx, stop := signal.NotifyContext(context.Background(), syscall.SIGINT, syscall.SIGTERM)
	defer stop()

	r, err := graceful.Default(
		graceful.WithAddr(":" + strconv.Itoa(config.GetConfig().GetInt("port"))),
	)
	if err != nil {
		panic(err)
	}
	defer r.Close()

	middleware.RegisterMiddlewares(r)
	registerBizMiddlewares(r)
	middleware.RegisterHealthCheck(r, ctx)

	r.GET("/ping", controller.PingPong)
	r.Any("/echo", controller.Echo)
	// Swagger API docs
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerfiles.Handler))

	if err := r.RunWithContext(ctx); err != nil && !errors.Is(err, context.Canceled) {
		panic(err)
	}
}

// registerBizMiddlewares register project middlewares
func registerBizMiddlewares(r *graceful.Graceful) {
	// more middlewares here
}
